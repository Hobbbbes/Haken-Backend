-- MySQL Script generated by MySQL Workbench
-- Di 11 Mai 2021 17:06:45 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Haken
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Haken` ;

-- -----------------------------------------------------
-- Schema Haken
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Haken` ;
USE `Haken` ;

-- -----------------------------------------------------
-- Table `Haken`.`Tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Haken`.`Tasks` ;

CREATE TABLE IF NOT EXISTS `Haken`.`Tasks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Author` VARCHAR(45) NOT NULL,
  `Description` LONGTEXT NULL,
  `Group_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Group_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_Tasks_Group1_idx` (`Group_id` ASC) VISIBLE,
  CONSTRAINT `fk_Tasks_Group1`
    FOREIGN KEY (`Group_id`)
    REFERENCES `Haken`.`Group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Haken`.`Group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Haken`.`Group` ;

CREATE TABLE IF NOT EXISTS `Haken`.`Group` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Description` MEDIUMTEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Haken`.`Tasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Haken`.`Tasks` ;

CREATE TABLE IF NOT EXISTS `Haken`.`Tasks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `Author` VARCHAR(45) NOT NULL,
  `Description` LONGTEXT NULL,
  `Group_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Group_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_Tasks_Group1_idx` (`Group_id` ASC) VISIBLE,
  CONSTRAINT `fk_Tasks_Group1`
    FOREIGN KEY (`Group_id`)
    REFERENCES `Haken`.`Group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Haken`.`Subtasks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Haken`.`Subtasks` ;

CREATE TABLE IF NOT EXISTS `Haken`.`Subtasks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `Points` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Tasks_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Tasks_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_Subtasks_Tasks_idx` (`Tasks_id` ASC) VISIBLE,
  CONSTRAINT `fk_Subtasks_Tasks`
    FOREIGN KEY (`Tasks_id`)
    REFERENCES `Haken`.`Tasks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Haken`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Haken`.`User` ;

CREATE TABLE IF NOT EXISTS `Haken`.`User` (
  `Token` VARCHAR(45) NOT NULL,
  `UserName` MEDIUMTEXT NOT NULL,
  `Password` TINYBLOB NOT NULL,
  PRIMARY KEY (`Token`),
  UNIQUE INDEX `Token_UNIQUE` (`Token` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Haken`.`Group_has_Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Haken`.`Group_has_Users` ;

CREATE TABLE IF NOT EXISTS `Haken`.`Group_has_Users` (
  `Group_id` INT NOT NULL,
  `User_Token` VARCHAR(45) NOT NULL,
  `IsAdmin` INT NOT NULL,
  PRIMARY KEY (`Group_id`, `User_Token`),
  INDEX `fk_Group_has_Users_Users1_idx` (`User_Token` ASC) VISIBLE,
  INDEX `fk_Group_has_Users_Group1_idx` (`Group_id` ASC) VISIBLE,
  CONSTRAINT `fk_Group_has_Users_Group1`
    FOREIGN KEY (`Group_id`)
    REFERENCES `Haken`.`Group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Group_has_Users_Users1`
    FOREIGN KEY (`User_Token`)
    REFERENCES `Haken`.`User` (`Token`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Haken`.`Submission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Haken`.`Submission` ;

CREATE TABLE IF NOT EXISTS `Haken`.`Submission` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `User_Token` VARCHAR(45) NOT NULL,
  `Tasks_id` INT NOT NULL,
  `Tasks_Group_id` INT NOT NULL,
  PRIMARY KEY (`id`, `User_Token`, `Tasks_id`, `Tasks_Group_id`),
  INDEX `fk_Submission_User1_idx` (`User_Token` ASC) VISIBLE,
  INDEX `fk_Submission_Tasks1_idx` (`Tasks_id` ASC, `Tasks_Group_id` ASC) VISIBLE,
  CONSTRAINT `fk_Submission_User1`
    FOREIGN KEY (`User_Token`)
    REFERENCES `Haken`.`User` (`Token`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Submission_Tasks1`
    FOREIGN KEY (`Tasks_id` , `Tasks_Group_id`)
    REFERENCES `Haken`.`Tasks` (`id` , `Group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Haken`.`Result`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Haken`.`Result` ;

CREATE TABLE IF NOT EXISTS `Haken`.`Result` (
  `Submission_id` INT NOT NULL,
  `Submission_User_Token` VARCHAR(45) NOT NULL,
  `Submission_Tasks_id` INT NOT NULL,
  `Submission_Tasks_Group_id` INT NOT NULL,
  `Subtasks_id` INT NOT NULL,
  `Success` INT NULL,
  PRIMARY KEY (`Submission_id`, `Submission_User_Token`, `Submission_Tasks_id`, `Submission_Tasks_Group_id`, `Subtasks_id`),
  INDEX `fk_Submission_has_Subtasks_Subtasks1_idx` (`Subtasks_id` ASC) VISIBLE,
  INDEX `fk_Submission_has_Subtasks_Submission1_idx` (`Submission_id` ASC, `Submission_User_Token` ASC, `Submission_Tasks_id` ASC, `Submission_Tasks_Group_id` ASC) VISIBLE,
  CONSTRAINT `fk_Submission_has_Subtasks_Submission1`
    FOREIGN KEY (`Submission_id` , `Submission_User_Token` , `Submission_Tasks_id` , `Submission_Tasks_Group_id`)
    REFERENCES `Haken`.`Submission` (`id` , `User_Token` , `Tasks_id` , `Tasks_Group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Submission_has_Subtasks_Subtasks1`
    FOREIGN KEY (`Subtasks_id`)
    REFERENCES `Haken`.`Subtasks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
